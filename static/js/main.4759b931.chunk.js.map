{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","ProductContent.js","ProductPicture.js","ProductPage.js","AboutPage.js","PictureContent.js","PictureFace.js","IntroPage.js","TopMenu.js","index.js"],"names":["module","exports","App","className","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","ProductContent","this","props","content","React","Component","text","pictures","ProductPicture","triggerFirstEnter","state","productNumber","length","setState","onClick","ProductPage","AboutPage","PictureContent","PictureFace","IntroPage","TopMenu","basename","pathname","to","path","exact","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","HomePage","isFirstState","isSecondState"],"mappings":"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","file":"static/js/main.4759b931.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nclass ProductContent extends React.Component {\n  render(){\n    return <div className=\"ProductContent\">\n        {this.props.content}\n    </div>;\n  }\n\n}\n\nexport default ProductContent;\n","import React from 'react';\nimport ProductContent from './ProductContent.js';\n\nconst text = [\"Jiggling, like flying through the cafeteria...\",\n              \"Hoot, Hoot and Hollar\",\n              \"Nodding, talking, and saying nothing\",\n              \"This is the man in his demo...\",\n              \"Simply carrying on the meaningless conversation\",\n              \"Shimming and Shaking...\"];\n\nconst pictures = [\"images/BirdAtBrandeis.gif\",\n                  \"images/Owl.gif\",\n                  \"images/Head002Silver.gif\",\n                  \"images/ShelDemo001.gif\",\n                  \"images/Head003Silver.gif\",\n                  \"images/Head001Silver.gif\"];\n\nclass ProductPicture extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { productNumber: 0 }\n  }\n\n  triggerFirstEnter = () => {\n      if(this.state.productNumber > text.length - 2)\n        this.setState({\n          productNumber: 0\n        });\n      else\n      this.setState({\n        productNumber: this.state.productNumber + 1\n      });\n  }\n\n  render(){\n    return <div className=\"ProductPicture\">\n              <img  className=\"Picture\" src={pictures[this.state.productNumber]} />\n              <button className=\"ProductButton\" onClick={this.triggerFirstEnter}>More</button>\n              <ProductContent content={text[this.state.productNumber]}/>\n    </div>;\n  }\n\n}\n\nexport default ProductPicture;\n","import React from 'react';\nimport ProductPicture from './ProductPicture.js';\n\nclass ProductPage extends React.Component {\n  render(){\n    return <div className=\"ProductPage\">\n      <ProductPicture />\n    </div>;\n  }\n\n}\n\nexport default ProductPage;\n","import React from 'react';\n\nclass AboutPage extends React.Component {\n  render(){\n    return <div className=\"AboutPage\">\n    You can say what you like, but I am telling you right now?\n    Sheldon is the man! Awesome! I mean - you should see his\n    mobile art - it's... it's really something!\n    </div>\n  }\n\n}\n\nexport default AboutPage;\n","import React from 'react';\n\nclass PictureContent extends React.Component {\n  render(){\n    return <div className=\"PictureContent\">\n        {this.props.content}\n    </div>;\n  }\n\n}\n\nexport default PictureContent;\n","import React from 'react';\nimport PictureContent from './PictureContent.js';\n\nconst text = \"Sheldon Gilden, the man behind mobile kinetic art. This is the art the jiggles, and wiggles, moves, bounces and vibrates with every movement in the room. Subtle, yet captivating. Technologically powerful, yet power free. Plugs into your mind, not the wall.\"\n\nclass PictureFace extends React.Component {\n  render(){\n    return <div className=\"PictureFace\">\n              <img  className=\"Picture\" src='images/ShelFace.jpg' />\n              <PictureContent content={text}/>\n    </div>;\n  }\n\n}\n\nexport default PictureFace;\n","import React from 'react';\nimport PictureFace from './PictureFace.js';\n\nclass IntroPage extends React.Component {\n  render(){\n    return <div className=\"IntroPage\">\n      <PictureFace />\n    </div>;\n  }\n\n}\n\nexport default IntroPage;\n","import React from 'react';\nimport ProductPage from './ProductPage.js';\nimport AboutPage from './AboutPage.js';\nimport IntroPage from './IntroPage.js';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass TopMenu extends React.Component {\n  render(){\n      return (\n          <div>\n              <Router basename={window.location.pathname || ''}>\n                <div>\n                  <ul>\n                    <li className=\"menu\">\n                      <Link to=\"/about\">About</Link>\n                    </li>\n                    <li className=\"menu\">\n                      <Link to=\"/product\">Product</Link>\n                    </li>\n                  </ul>\n\n                  <Switch>\n                    <Route path=\"/about\">\n                      <AboutPage />\n                    </Route>\n                    <Route path=\"/product\">\n                      <ProductPage />\n                    </Route>\n                    <Route exact path=\"/\">\n                      <IntroPage />\n                    </Route>\n                    <Route exact path=\"/kinart\">\n                      <IntroPage />\n                    </Route>\n                  </Switch>\n                </div>\n              </Router>\n        </div>\n      )\n    }\n}\n\nexport default TopMenu;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport TopMenu from './TopMenu.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { isFirstState: true, isSecondState:false }\n  }\n\n  triggerFirstEnter = () => {\n      this.setState({\n        isFirstState: false,\n        isSecondState: true\n      })\n  }\n\n  render(){\n    return (\n      <div>\n        {this.state.isFirstState &&\n        <div className=\"HomePage\">This is all about Sheldon... and his\n        <br/><i>Highly Kinetic Mobile Art</i>\n        <br/><button className=\"StartButton\" onClick={this.triggerFirstEnter}>Click to Enter</button></div>}\n        {this.state.isSecondState && <TopMenu/>}\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <HomePage />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}